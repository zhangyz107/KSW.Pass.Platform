<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NewProject" xml:space="preserve">
    <value>新建项目</value>
  </data>
  <data name="OpenProject" xml:space="preserve">
    <value>打开项目</value>
  </data>
  <data name="SaveAs" xml:space="preserve">
    <value>另存为</value>
  </data>
  <data name="Develop" xml:space="preserve">
    <value>开发</value>
  </data>
  <data name="Run" xml:space="preserve">
    <value>运行</value>
  </data>
  <data name="Release" xml:space="preserve">
    <value>发布</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>帮助</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>版本</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>日期</value>
  </data>
  <data name="FilePath" xml:space="preserve">
    <value>文件路径</value>
  </data>
  <data name="Executable" xml:space="preserve">
    <value>可执行程序</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>项目</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="ProjectDetail" xml:space="preserve">
    <value>项目明细</value>
  </data>
  <data name="TestPlan" xml:space="preserve">
    <value>测试计划</value>
  </data>
  <data name="TestPlanType" xml:space="preserve">
    <value>测试计划类型</value>
  </data>
  <data name="ProjectName" xml:space="preserve">
    <value>项目名称</value>
  </data>
  <data name="ProjectFile" xml:space="preserve">
    <value>项目文件</value>
  </data>
  <data name="ProjectPath" xml:space="preserve">
    <value>项目路径</value>
  </data>
  <data name="Configuration" xml:space="preserve">
    <value>配置文件</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>确认</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="ProjectFolder" xml:space="preserve">
    <value>项目文件夹</value>
  </data>
  <data name="Browse" xml:space="preserve">
    <value>浏览</value>
  </data>
  <data name="CurrentProject" xml:space="preserve">
    <value>当前项目</value>
  </data>
  <data name="SaveAsPath" xml:space="preserve">
    <value>另存为项目位置</value>
  </data>
  <data name="SaveAsName" xml:space="preserve">
    <value>另存为项目名称</value>
  </data>
  <data name="ProjectReleaseTo" xml:space="preserve">
    <value>项目发布到</value>
  </data>
  <data name="Datalog" xml:space="preserve">
    <value>数据记录</value>
  </data>
  <data name="LogPath" xml:space="preserve">
    <value>日志路径</value>
  </data>
  <data name="TestItem" xml:space="preserve">
    <value>测试项</value>
  </data>
  <data name="Option" xml:space="preserve">
    <value>选项</value>
  </data>
  <data name="Looping" xml:space="preserve">
    <value>循环</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>停止</value>
  </data>
  <data name="LoopCount" xml:space="preserve">
    <value>循环次数</value>
  </data>
  <data name="LoopsExecuted" xml:space="preserve">
    <value>已循环次数</value>
  </data>
  <data name="DelayBetweenLoops" xml:space="preserve">
    <value>循环间延迟</value>
  </data>
  <data name="FailCount" xml:space="preserve">
    <value>失败次数</value>
  </data>
  <data name="StopOnFail" xml:space="preserve">
    <value>失败时停止</value>
  </data>
  <data name="PrintTime" xml:space="preserve">
    <value>打印时间</value>
  </data>
  <data name="OfflineMode" xml:space="preserve">
    <value>离线模式</value>
  </data>
  <data name="Operate" xml:space="preserve">
    <value>操作</value>
  </data>
  <data name="LoadTestPlan" xml:space="preserve">
    <value>加载测试计划</value>
  </data>
  <data name="SetTestItem" xml:space="preserve">
    <value>设置测试项</value>
  </data>
  <data name="StartTest" xml:space="preserve">
    <value>开始测试</value>
  </data>
  <data name="EndTest" xml:space="preserve">
    <value>结束测试</value>
  </data>
  <data name="SelectFolder" xml:space="preserve">
    <value>选择文件夹</value>
  </data>
  <data name="TemplateInstalledSuccessfully" xml:space="preserve">
    <value>模板安装成功</value>
  </data>
  <data name="TemplateInstalledFailed" xml:space="preserve">
    <value>模板安装失败</value>
  </data>
  <data name="ProjectCreatedSuccessfully" xml:space="preserve">
    <value>项目创建成功</value>
  </data>
  <data name="ProjectCreatedFailed" xml:space="preserve">
    <value>项目创建失败</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>未能找到</value>
  </data>
  <data name="PublishFailed" xml:space="preserve">
    <value>发布失败</value>
  </data>
  <data name="FileCopyFailed" xml:space="preserve">
    <value>文件拷贝失败</value>
  </data>
  <data name="IsEmpty" xml:space="preserve">
    <value>为空</value>
  </data>
  <data name="CanNotBeEmpty" xml:space="preserve">
    <value>不能为空</value>
  </data>
  <data name="SelectProject" xml:space="preserve">
    <value>选择项目</value>
  </data>
  <data name="SaveAsPathSameError" xml:space="preserve">
    <value>另存为{0}不能与源路径相同</value>
  </data>
</root>